/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define THIRD   3

&sk {
    release-after-ms = <2000>;
    quick-release;
    /delete-property/ ignore-modifiers;
};

/ {
    behaviors {
        bspcdel: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bslshpipe: backslash_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "BSLSH_PIPE";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        aposqmark: apostrofe_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "APOS_QMARK";
            #binding-cells = <0>;
            bindings = <&kp APOS>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        escalttab: alt_tab_esc  {
            compatible = "zmk,behavior-mod-morph";
            label = "ESC_ALTTAB";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp TAB>;
            mods = <(MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LALT|MOD_RALT)>;
        };
        shiftcaps: shift_caps_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&kt CAPSLOCK>;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// ╭────────────┬────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────┬────────────╮
// | ESC ALTTAB |  Q         |  W         |  E         |  R         |  T         |   |  Y         |  U         |  I         |  O         |  P         | BKSP       |
   &escalttab      &kp Q        &kp W        &kp E        &kp R        &kp T            &kp Y        &kp U        &kp I        &kp O        &kp P        &bspcdel
// ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤
// |SHFT + CAPS |  A         |  S         |  D         |  F         |  G         |   |  H         |  J         |  K         |  L         |  ;         |  '         |
   &shiftcaps   &kp A        &kp S        &kp D        &kp F        &kp G            &kp H        &kp J        &kp K        &kp L        &kp SEMI     &kp SQT
// ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤
// | CTRL       |  Z         |  X         |  C         |  V         |  B         |   |  N         |  M         |  ,         |  .         |            |            |
   &kp LCTRL    &kp Z        &kp X        &kp C        &kp V        &kp B            &kp N        &kp M        &kp COMMA    &kp DOT      &trans       &trans
// ╰────────────┴────────────┴────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┴────────────┴────────────╯
//                                        | ALT        | LWR        | SPC        |   | ENT        | RSE        | GUI        |
                                          &kp LALT     &lt LOWER HOME &kp SPACE      &kp RET     &lt RAISE END &kp LGUI
//                                        ╰────────────┴────────────┴────────────╯   ╰────────────┴────────────┴────────────╯ 


               
                        >;
                };
                lower_layer {
                        bindings = <
// ╭────────────┬────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────┬────────────╮
// | TAB        |  1         |  2         |  3         |  4         |  5         |   |  6         |  7         | 8          |  9         |  0         |            |
   &kp TAB      &kp N1       &kp N2       &kp N3       &kp N4       &kp N5           &kp N6       &kp N7       &kp N8       &kp N9       &kp N0       &trans
// ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤
// | SHFT       | LFT        | DWN        | UP         | RGT        |            |   | LFT        | DWN        | UP         | RGT        |            | F12        |
   &sk LSHIFT   &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT       &trans           &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &trans       &kp F12
// ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤
// | CTRL       | F1         | F2         | F3         | F4         | F5         |   | F6         | F7         | F8         | F9         | F10        | F11        |
   &kp LCTRL    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5           &kp F6       &kp F7       &kp F8       &kp F9       &kp F10      &kp F11
// ╰────────────┴────────────┴────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┴────────────┴────────────╯
//                                        | ALT        | LWR        | SPC        |   | ENT        | RSE        | GUI        |
                                          &trans       &trans       &trans           &trans       &trans       &trans
//                                        ╰────────────┴────────────┴────────────╯   ╰────────────┴────────────┴────────────╯ 
                        >;
                };

                raise_layer {
                        bindings = <  
// ╭─────────────┬────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────┬────────────╮
// | \"|"        |  !         |  @         |  #         |  $         |  %         |   |  &         |  (         |  )         |  =         | '?         |            |
   &bslshpipe    &kp EXCL     &kp AT_SIGN  &kp HASH     &kp DLLR     &kp PRCNT         &kp AMPS    &kp LPAR     &kp RPAR     &kp EQUAL    &aposqmark   &trans
// ├─────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤
// | SHIFT       | BT1        | BT2        | BT3        | BT4        |BTCLR       |   |  -         |  [         |  ]         |  *         | ´`         |  `         |
   &sk LSHIFT    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR       &kp MINUS    &kp LBKT     &kp RBKT    &kp KP_MULTIPLY &kp FSLH   &kp GRAVE
// ├─────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤
// | CTRL        |            |            |            |            |            |   |  _         |  {         |  }         |  +         | ºª         |  ~         |
   &kp LCTRL     &trans      &trans        &trans       &trans       &trans           &kp UNDER    &kp LBRC     &kp RBRC     &kp PLUS     &kp PIPE     &kp TILDE
// ╰─────────────┴────────────┴────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┴────────────┴────────────╯
//                                         | ALT        | LWR        | SPC        |   | ENT        | RSE        | GUI        |
                                           &trans       &trans       &trans           &trans       &trans       &trans
//                                         ╰────────────┴────────────┴────────────╯   ╰────────────┴────────────┴────────────╯ 
                        >;
                };

                third_layer {
                        bindings = <
// ╭─────────────┬────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────────┬────────────┬────────────┬────────────┬────────────╮
// |C_BRI_DEC    |C_BRI_UP    |C_MUTE      |C_VOL_DN    |C_VOL_UP    |            |   |C_PREV      |C_PLAY_PAUSE    |   C_NEXT   |            |            |            |
   &kp C_BRI_DEC &kp C_BRI_UP &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &none            &kp C_PREV   &kp C_PLAY_PAUSE &kp C_NEXT  &none        &none        &none
// ├─────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────────┼────────────┼────────────┼────────────┼────────────┤
// |             |            |            |            |            |            |   |            |                |            |            |            |            |
   &none         &none        &none         &none       &none        &none            &none        &none            &none        &none        &none        &none
// ├─────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────────┼────────────┼────────────┼────────────┼────────────┤
// |             |            |            |            |            |            |   |            |                |            |            |            |            |
   &none         &none        &none         &none       &none        &none            &none        &none            &none        &none        &none        &none
// ╰─────────────┴────────────┴────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────────┼────────────┼────────────┴────────────┴────────────╯
//                                         | ALT        | LWR        | SPC        |   | ENT        | RSE            | GUI        |
                                           &trans       &trans       &trans           &trans       &trans           &trans
//                                         ╰────────────┴────────────┴────────────╯   ╰────────────┴────────────────┴────────────╯ 

                        >;
                };
        };
};
